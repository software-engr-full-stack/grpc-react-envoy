server {

    root /servers/grpc-react-envoy/client/reactjs/build;
    index index.html index.htm index.nginx-debian.html;

    server_name grpc.cloudsandbox.dev;

    location / {
        try_files $uri $uri/ =404;
    }

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/grpc.cloudsandbox.dev/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/grpc.cloudsandbox.dev/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    location /api/ {
        # Replace localhost:50051 with the address and port of your gRPC server
        # The 'grpc://' prefix is optional; unencrypted gRPC is the default
        # grpc_pass grpc://localhost:50051;

        # grpc_pass grpc://host.docker.internal:50051;

        proxy_http_version 1.1;
        proxy_pass http://localhost:8080/;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'origin';
            # add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            #
            # Custom headers and headers various browsers *should* be OK with but aren't
            #
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,x-grpc-web,x-user-agent';
            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
         }
         if ($request_method = 'POST') {
            add_header 'Access-Control-Allow-Origin' 'origin' always;
            # add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,x-grpc-web,x-user-agent' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
         }
         if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' 'origin' always;
            # add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,x-grpc-web,x-user-agent' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
         }
    }
}
server {
    if ($host = grpc.cloudsandbox.dev) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    listen [::]:80;

    server_name grpc.cloudsandbox.dev;
    return 404; # managed by Certbot


}
